
#ifndef __TRACE_RAY_ISPH__
#define __TRACE_RAY_ISPH__

#define UINT_MAX   4294967295U

struct chunk
{
  uint32 id;
  uint32 x;
  uint32 y;
  uint32 size_x;
  uint32 size_y;
};

typedef float<3> vec3;



inline vec3 normalize(const vec3& v)
{
  return v * rsqrt(v.x * v.x + v.y * v.y + v.z * v.z);
}

inline float rand_pcg(const uint32 seed)
{
  uint32 state;
  state = seed * 747796405U + 2891336453U;
  uint32 word = ((state >> ((state >> 28U) + 4U)) ^ state) * 277803737U;
  uint32 result = (word >> 22U) ^ word;
  return (float)result / (float)UINT_MAX;   // [0.0f, 1.0f]
}

inline float rand_normal_distribution(const uint32 seed)
{
  float theta = 2.0f * 3.1415926f * rand_pcg(seed);
  float rho = sqrt(-2.0f * log(rand_pcg(seed)));
  
  return rho * cos(theta);  // [-1.0f, 1.0f]
}

inline vec3 rand_direction(const uint32 seed)
{
  float x = rand_normal_distribution(seed);
  float y = rand_normal_distribution(seed+1);
  float z = rand_normal_distribution(seed+2);
  vec3 v = {x, y, z};
  return normalize(v);
}



#endif